169. Majority Element
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int curr = nums[0];
        int cnt =0;
        for(int i=0;i<nums.size();i++){
            if(curr == nums[i])
                cnt ++;   
            else
                cnt --;
            if(cnt == 0)
                curr = nums[i+1];
        }
        return curr;
        
    }
};

229. Majority Element II


class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int cand1=INT_MIN;
        int cand2 = INT_MIN;
        int count1 = 0,count2 =0;
        for(int i =0; i<nums.size();i++){
            if(cand1 != INT_MIN && cand1 == nums[i]){
                count1++;
            }else if(cand2 != INT_MIN && cand2 == nums[i]){
                count2++;
            }else if(count1 == 0 ){
                cand1 = nums[i];
                count1 =1;
            }else if(count2 == 0){
                cand2 = nums[i];
                count2 = 1;
            }else {
                count1 --;
                count2--;
            }

        }
        vector<int> result;
        // if(count1>0 && count2 >0){
        //     result.push_back(cand1);
        //     result.push_back(cand2);
        // }
        // else if( count1 >0 && count2<=0){
        //     result.push_back(cand1);
        // }else if(count2> 0 && count1 <=0){
        //         result.push_back(cand2);
        // }
        count1 =0;
        count2 =0;
        for( int  i =0;i<nums.size();i++){
           if(cand1 != INT_MIN && cand1 == nums[i]){
                count1++;
            }else if(cand2 != INT_MIN && cand2 == nums[i]){
                count2++;
            }
        }
        if(count1 >= ((nums.size()/3 )+ 1))
         result.push_back(cand1);
        if(count2 >= ((nums.size()/3 )+ 1)) 
        result.push_back(cand2);
        return result;
        
    }
};

769. Max Chunks To Make Sorted
class Solution {
public:
    int maxChunksToSorted(vector<int>& arr) {
        int chunk =0;
        int maxi =INT_MIN;
        for(int i=0;i<arr.size();i++){
            maxi = max(maxi,arr[i]);
            if(maxi == i){
                chunk++;
            }
        }
        return chunk;
    }
};
